name: M30/v3 Step5 ERP Integration CI

on:
  push:
    branches: [feat/m30-spec-v3-step5-integration]
  pull_request:
    branches: [main]
    paths:
      - 'apps/api/**'
      - 'apps/web/**'
      - 'engine/**'
      - '.github/workflows/m30-step5-ci.yml'

jobs:
  backend-tests:
    name: Backend API Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/api

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: TypeScript compilation check
        run: npm run build

      - name: Run API integration tests
        run: npm test
        env:
          NODE_ENV: test

      - name: Test API endpoints
        run: |
          npm run start &
          SERVER_PID=$!
          sleep 5

          # Health check
          curl -f http://localhost:8787/api/health || exit 1

          # Test evaluation endpoint
          curl -f -X POST http://localhost:8787/api/v3/estimate/evaluate \
            -H "Content-Type: application/json" \
            -d '{"input":{"panel":{"W":700,"H":800,"D":200},"main_breaker":{"brand":"SBS","model":"54","poles":4,"AF":50}}}' || exit 1

          kill $SERVER_PID

  frontend-tests:
    name: Frontend Component Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/web

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: TypeScript compilation check
        run: npm run build

      - name: Run component tests
        run: npm test

      - name: Lint check
        run: npm run lint

  integration-tests:
    name: Full Integration Tests
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install root dependencies
        run: npm ci

      - name: Install API dependencies
        run: cd apps/api && npm ci

      - name: Install Web dependencies
        run: cd apps/web && npm ci

      - name: Start backend server
        run: |
          cd apps/api && npm run start &
          SERVER_PID=$!
          echo "SERVER_PID=$SERVER_PID" >> $GITHUB_ENV
          sleep 10

      - name: Run E2E integration tests
        run: npm run test:integration
        env:
          API_BASE_URL: http://localhost:8787

      - name: Test CEO signature workflow
        run: |
          # Test CEO signature endpoint
          response=$(curl -s -X POST http://localhost:8787/api/admin/feature/approve \
            -H "Content-Type: application/json" \
            -d '{"pass":"wrong-password","flag":"v3"}')
          echo $response | grep -q "서명 실패" || exit 1

      - name: Test operations dashboard data
        run: |
          # Test ops summary endpoint
          curl -f http://localhost:8787/api/v3/ops/summary || exit 1

      - name: Cleanup
        run: kill $SERVER_PID

  quality-gates:
    name: Quality Gates & Validation
    runs-on: ubuntu-latest
    needs: [integration-tests]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd apps/api && npm ci
          cd ../web && npm ci

      - name: Security audit
        run: |
          cd apps/api && npm audit --audit-level=moderate
          cd ../web && npm audit --audit-level=moderate

      - name: Code quality checks
        run: |
          # Check for TODO comments in core functionality
          if grep -r "TODO\|FIXME" apps/api/src --include="*.ts" --include="*.js"; then
            echo "❌ TODO/FIXME found in API code"
            exit 1
          fi

          # Verify M30 schema compatibility
          if [ -f "core/knowledge/core_knowledge.json" ]; then
            echo "✅ Core knowledge schema accessible"
          else
            echo "⚠️ Core knowledge schema not found - using mock data"
          fi

      - name: Performance validation
        run: |
          cd apps/api && npm run start &
          SERVER_PID=$!
          sleep 5

          # Performance test - should respond within 5 seconds
          timeout 5s curl -X POST http://localhost:8787/api/v3/estimate/evaluate \
            -H "Content-Type: application/json" \
            -d '{"input":{"panel":{"W":700,"H":800,"D":200}}}' || exit 1

          kill $SERVER_PID

      - name: Feature flag validation
        run: |
          # Verify feature flag environment variables work
          NEXT_PUBLIC_FEATURE_ESTIMATE_CORE_V3=true \
          NEXT_PUBLIC_FLAG_ROLLOUT_PCT=50 \
          node -e "
            const {Flags} = require('./apps/web/src/flags/feature.ts');
            console.log('Feature flags loaded:', Flags);
            process.exit(Flags.v3 ? 0 : 1);
          "

  deployment-ready:
    name: Deployment Readiness Check
    runs-on: ubuntu-latest
    needs: [quality-gates]

    steps:
      - uses: actions/checkout@v4

      - name: Verify file structure
        run: |
          echo "✅ Checking Step5 file structure..."

          # Backend files
          [ -f "apps/api/src/server.ts" ] || exit 1
          [ -f "apps/api/src/admin.ts" ] || exit 1
          [ -f "apps/api/package.json" ] || exit 1

          # Frontend files
          [ -f "apps/web/src/pages/estimates/v3.tsx" ] || exit 1
          [ -f "apps/web/src/pages/ops/dashboard.tsx" ] || exit 1
          [ -f "apps/web/src/pages/settings/feature-flags.tsx" ] || exit 1
          [ -f "apps/web/src/flags/feature.ts" ] || exit 1

          # Engine files
          [ -f "engine/quote_exporter.js" ] || exit 1

          # Test files
          [ -f "tests/api_evaluate.spec.ts" ] || exit 1

          echo "✅ All required files present"

      - name: Generate deployment manifest
        run: |
          cat > step5-deployment-manifest.json << EOF
          {
            "version": "M30-v3-Step5",
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "components": {
              "backend": {
                "api_server": "apps/api/src/server.ts",
                "admin_routes": "apps/api/src/admin.ts",
                "endpoints": ["evaluate", "export", "download", "ops/summary", "admin/feature/approve"]
              },
              "frontend": {
                "estimation_ui": "apps/web/src/pages/estimates/v3.tsx",
                "ops_dashboard": "apps/web/src/pages/ops/dashboard.tsx",
                "feature_flags": "apps/web/src/pages/settings/feature-flags.tsx",
                "components": ["WhyTraceViewer", "StatusBadge", "QualityGate"]
              },
              "engine": {
                "exporter": "engine/quote_exporter.js"
              },
              "tests": {
                "api_tests": "tests/api_evaluate.spec.ts"
              }
            },
            "features": [
              "job-based-architecture",
              "ceo-digital-signature",
              "whytrace-2.0-viewer",
              "ops-dashboard",
              "feature-flags",
              "csv-xlsx-export",
              "zip-downloads",
              "rbac-system",
              "audit-logging"
            ],
            "status": "deployment-ready"
          }
          EOF

      - name: Upload deployment manifest
        uses: actions/upload-artifact@v4
        with:
          name: step5-deployment-manifest
          path: step5-deployment-manifest.json
        # migrated to v4 due to v3 deprecation (cutoff 2025-01-30)
