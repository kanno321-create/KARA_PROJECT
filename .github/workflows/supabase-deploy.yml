name: Deploy to Supabase

on:
  push:
    branches: [ "main" ]
    paths:
      - "supabase/**"
      - ".github/workflows/supabase-deploy.yml"
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1

      # ‚úÖ ÏãúÌÅ¨Î¶ø Í∞ÄÎìú: ÏãúÌÅ¨Î¶ø ÏóÜÏúºÎ©¥ Ïù¥ Ïä§ÌÖùÏóêÏÑú Î∞îÎ°ú Ïä§ÌÇµ(Ïù¥ÌõÑ Ïä§ÌÖùÎèÑ ÎèôÏùº Ï°∞Í±¥)
      - name: Preconditions / Secrets present?
        id: gate
        if: ${{ github.event_name == 'workflow_dispatch' || (secrets.SUPABASE_PROJECT_REF != '' && secrets.SUPABASE_ACCESS_TOKEN != '') }}
        run: echo "ok=1" >> "$GITHUB_OUTPUT"

      # ‚úÖ ÎßÅÌÅ¨: gate ÌÜµÍ≥ºÏãúÏóêÎßå Ïã§Ìñâ
      - name: Link Supabase project
        if: ${{ steps.gate.outputs.ok == '1' }}
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          supabase link \
            --project-ref "${{ secrets.SUPABASE_PROJECT_REF }}" \
            ${{ secrets.SUPABASE_DB_PASSWORD != '' && format('--password "{0}"', secrets.SUPABASE_DB_PASSWORD) || '' }}
          supabase status -o pretty

      - name: Run Database Migrations
        if: ${{ steps.gate.outputs.ok == '1' }}
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          echo "üóÑÔ∏è Running database migrations..."
          if [ -d "supabase/migrations" ] && [ "$(ls -A supabase/migrations)" ]; then
            supabase db push --include-all --debug
            echo "‚úÖ Migrations applied successfully"
          else
            echo "‚ÑπÔ∏è No migrations found to apply"
          fi

      - name: Deploy Edge Functions
        if: ${{ steps.gate.outputs.ok == '1' }}
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          echo "‚ö° Deploying edge functions..."
          if [ -d "supabase/functions" ] && [ "$(ls -A supabase/functions)" ]; then
            supabase functions deploy
            echo "‚úÖ Edge functions deployed successfully"
          else
            echo "‚ÑπÔ∏è No edge functions found to deploy"
          fi

      - name: Validate Deployment
        if: ${{ steps.gate.outputs.ok == '1' }}
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          echo "üîç Validating deployment..."
          supabase status -o pretty
          echo "‚úÖ Deployment validation completed"